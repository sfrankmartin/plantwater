// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  plants        Plant[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Plant {
  id               String           @id @default(cuid())
  name             String
  scientificName   String?
  profileImageUrl  String?
  description      String?
  location         String?
  wateringFrequency Int             // days between watering
  lastWatered      DateTime?
  nextWateringDue  DateTime?
  userId           String
  user             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  careInstructions String?
  plantType        String?
  lightRequirement String?
  humidityLevel    String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  wateringHistory  WateringRecord[]
  analyses         PlantAnalysis[]
}

model WateringRecord {
  id        String   @id @default(cuid())
  plantId   String
  plant     Plant    @relation(fields: [plantId], references: [id], onDelete: Cascade)
  wateredAt DateTime @default(now())
  notes     String?
}

model PlantAnalysis {
  id              String   @id @default(cuid())
  plantId         String
  plant           Plant    @relation(fields: [plantId], references: [id], onDelete: Cascade)
  healthScore     Int
  healthStatus    String
  recommendations String   // JSON array
  issues          String   // JSON array
  createdAt       DateTime @default(now())
}
